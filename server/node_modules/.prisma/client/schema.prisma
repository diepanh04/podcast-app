// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String          @id @default(cuid())
  name                  String
  email                 String          @unique
  image                 String?
  hearts                Heart[]
  favouriteList         FavouriteList?
}

model Genre {
  id              Int            @unique
  name            String
  channels        GenresOnChannels[]
}

model Channel {
  id                  String          @id @default(cuid()) 
  title               String
  publisher           String          
  thumbnail           String
  description         String                 
  genres              GenresOnChannels[]
  episodes            Episode[]
  channelHearts       ChannelHeart[]
  favouriteChannels   FavouriteChannel[]     
}

model GenresOnChannels {
  channel         Channel         @relation(fields: [channelId], references: [id])
  channelId       String
  genre           Genre           @relation(fields: [genreId], references: [id])
  genreId         Int

  @@id([channelId, genreId])
}

model Episode {
  id                    String          @id @default(cuid()) 
  title                 String
  thumbnail             String
  channelId             String
  channel               Channel         @relation(fields: [channelId], references: [id], onDelete: Cascade)
  episodeHearts         EpisodeHeart[]
  favouriteEpisodes     FavouriteEpisode[]
}

model Heart {
  id                String          @id @default(cuid()) 
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  channelHearts     ChannelHeart[]   
  episodeHearts     EpisodeHeart[]
}

model ChannelHeart {
  id          String    @id @default(cuid())
  heartId     String
  channelId   String
  heart       Heart     @relation(fields: [heartId], references: [id], onDelete: Cascade)
  channel     Channel   @relation(fields: [channelId], references: [id], onDelete: Cascade)
}

model EpisodeHeart {
  id          String    @id @default(cuid())
  heartId     String
  episodeId   String
  heart       Heart     @relation(fields: [heartId], references: [id])
  episode     Episode   @relation(fields: [episodeId], references: [id], onDelete: Cascade)
}

model FavouriteList {
  id                       String               @id @default(cuid()) 
  user                     User                 @relation(fields: [userId], references: [id])
  userId                   String               @unique
  favouriteChannels        FavouriteChannel[]
  favouriteEpisodes        FavouriteEpisode[]
}

model FavouriteChannel {
  id                    String            @id @default(cuid())
  channelId             String
  favouriteListId       String 
  channel               Channel           @relation(fields: [channelId], references: [id], onDelete: Cascade)
  favouriteList         FavouriteList     @relation(fields: [favouriteListId], references: [id], onDelete: Cascade)
}

model FavouriteEpisode {
  id                    String            @id @default(cuid())
  episodeId             String
  favouriteListId       String
  episode               Episode           @relation(fields: [episodeId], references: [id], onDelete: Cascade)
  favouriteList         FavouriteList     @relation(fields: [favouriteListId], references: [id], onDelete: Cascade)
}




