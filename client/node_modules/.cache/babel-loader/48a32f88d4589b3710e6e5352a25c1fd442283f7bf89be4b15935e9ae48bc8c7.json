{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GetEpisodesByChannel from './GetEpisodesByChannel';\nimport { MAIN_LIGHT_GREY, MAIN_ORANGE, MAIN_DARK_BLUE } from '../shared/Constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodeList = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const hearted = channel.hearted;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        padding: '3%',\n        backgroundColor: MAIN_LIGHT_GREY\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        sx: {\n          marginBottom: '3%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: channel.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 9,\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '40px',\n                fontWeight: 'bold',\n                color: MAIN_DARK_BLUE\n              },\n              children: channelName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '20px',\n                color: MAIN_DARK_BLUE\n              },\n              children: [\"by \", channel.publisher]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: hearted ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n              sx: {\n                color: MAIN_ORANGE,\n                fontSize: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n              sx: {\n                color: MAIN_ORANGE,\n                fontSize: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 91\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetEpisodesByChannel, {\n        channelName: channelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodeList, \"WKXOhcUfFqkfgcINXJ6X9eRpUY0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = EpisodeList;\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","Typography","Divider","FavoriteIcon","FavoriteBorderIcon","useNavigate","useDispatch","useSelector","GetEpisodesByChannel","MAIN_LIGHT_GREY","MAIN_ORANGE","MAIN_DARK_BLUE","jsxDEV","_jsxDEV","EpisodeList","props","_s","channelName","navigate","dispatch","channel","state","channels","episodes","hearted","children","container","sx","padding","backgroundColor","item","xs","marginBottom","src","thumbnail","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","fontSize","fontWeight","color","publisher","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GetEpisodesByChannel from './GetEpisodesByChannel';\nimport { MAIN_LIGHT_GREY, MAIN_ORANGE, MAIN_DARK_BLUE } from '../shared/Constant';\n\nconst EpisodeList = (props) => {\n  const { channelName } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const hearted = channel.hearted;\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          padding: '3%',\n          backgroundColor: MAIN_LIGHT_GREY,\n        }}\n      >\n        <Grid item xs={12} container sx={{ marginBottom: '3%' }}>\n          <Grid xs={3}><img src={channel.thumbnail} /></Grid>\n          <Grid xs={9} sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n            <div>\n              <Typography\n                sx={{\n                  fontSize: '40px',\n                  fontWeight: 'bold',\n                  color: MAIN_DARK_BLUE,\n                }}\n              >\n                {channelName}\n              </Typography>\n              <Typography\n                sx={{\n                  fontSize: '20px',\n                  color: MAIN_DARK_BLUE,\n                }}\n              >\n                by {channel.publisher}\n              </Typography>\n            </div>\n            <span>\n            {(hearted) ? <FavoriteIcon sx={{ color: MAIN_ORANGE, fontSize: '25px' }} /> : <FavoriteBorderIcon sx={{ color: MAIN_ORANGE, fontSize: '25px' }} />}\n            </span>\n          </Grid>\n        </Grid>\n        <Grid xs={12}>\n          <Divider />\n        </Grid>\n        <GetEpisodesByChannel channelName={channelName} />\n      </Grid>\n    </div>\n  )\n}\n\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default EpisodeList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}