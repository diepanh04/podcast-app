{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/genres/GetChannelsByGenreName.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelsByGenreName } from '../../redux/genres/actions/genres';\nimport IndividualChannelCard from '../channels/IndividualChannelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetChannelsByGenreName = props => {\n  _s();\n  const {\n    genreName,\n    short\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName]);\n  const channels = useSelector(state => console.log(state.genres));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [channels && short && channels.slice(0, 6).map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 6,\n      md: 4,\n      lg: 2,\n      children: /*#__PURE__*/_jsxDEV(IndividualChannelCard, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), channels && !short && channels.map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(IndividualChannelCard, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(GetChannelsByGenreName, \"+A986EfektYIqdTLIf2iwDqWPGs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetChannelsByGenreName;\nGetChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired\n};\nexport default GetChannelsByGenreName;\nvar _c;\n$RefreshReg$(_c, \"GetChannelsByGenreName\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","useDispatch","useSelector","getChannelsByGenreName","IndividualChannelCard","jsxDEV","_jsxDEV","GetChannelsByGenreName","props","_s","genreName","short","dispatch","channels","state","console","log","genres","container","spacing","children","slice","map","channel","item","sm","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","id","xs","_c","propTypes","string","isRequired","bool","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/genres/GetChannelsByGenreName.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelsByGenreName } from '../../redux/genres/actions/genres';\nimport IndividualChannelCard from '../channels/IndividualChannelCard';\n\nconst GetChannelsByGenreName = (props) => {\n  const { genreName, short } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName])\n\n  const channels = useSelector((state) => console.log(state.genres));\n\n  return (\n    <Grid container spacing={3}>\n      {channels && short && channels.slice(0, 6).map((channel) => (\n        <Grid item sm={6} md={4} lg={2} key={channel.id}>\n          <IndividualChannelCard channel={channel} />\n        </Grid>\n      ))}\n      {channels && !short && channels.map((channel) => (\n        <Grid item xs={2} key={channel.id}>\n          <IndividualChannelCard channel={channel} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nGetChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired,\n};\n\nexport default GetChannelsByGenreName;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,OAAOC,qBAAqB,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAClC,MAAMI,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACT,sBAAsB,CAACO,SAAS,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMG,QAAQ,GAAGX,WAAW,CAAEY,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC,CAAC;EAElE,oBACEX,OAAA,CAACN,IAAI;IAACkB,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,GACxBP,QAAQ,IAAIF,KAAK,IAAIE,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,OAAO,iBACrDjB,OAAA,CAACN,IAAI;MAACwB,IAAI;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAP,QAAA,eAC7Bd,OAAA,CAACF,qBAAqB;QAACmB,OAAO,EAAEA;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADRR,OAAO,CAACS,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CACP,CAAC,EACDlB,QAAQ,IAAI,CAACF,KAAK,IAAIE,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBAC1CjB,OAAA,CAACN,IAAI;MAACwB,IAAI;MAACS,EAAE,EAAE,CAAE;MAAAb,QAAA,eACfd,OAAA,CAACF,qBAAqB;QAACmB,OAAO,EAAEA;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADtBR,OAAO,CAACS,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACtB,EAAA,CAxBIF,sBAAsB;EAAA,QAETN,WAAW,EAMXC,WAAW;AAAA;AAAAgC,EAAA,GARxB3B,sBAAsB;AA0B5BA,sBAAsB,CAAC4B,SAAS,GAAG;EACjCzB,SAAS,EAAEX,SAAS,CAACqC,MAAM,CAACC,UAAU;EACtC1B,KAAK,EAAEZ,SAAS,CAACuC,IAAI,CAACD;AACxB,CAAC;AAED,eAAe9B,sBAAsB;AAAC,IAAA2B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}