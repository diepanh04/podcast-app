{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetChannelsByGenreName.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelsByGenreName } from '../actions/genres.js';\nimport IndividualChannelCard from './IndividualChannelCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetChannelsByGenreName = props => {\n  _s();\n  const {\n    genreName,\n    short\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName]);\n  const genre = useSelector(state => state.genres.genre);\n  console.log(genre);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(GetChannelsByGenreName, \"J5N2wjzM95ubqVoe1gDqeGn/iJM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetChannelsByGenreName;\nGetChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired\n};\nexport default GetChannelsByGenreName;\nvar _c;\n$RefreshReg$(_c, \"GetChannelsByGenreName\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","useDispatch","useSelector","getChannelsByGenreName","IndividualChannelCard","jsxDEV","_jsxDEV","GetChannelsByGenreName","props","_s","genreName","short","dispatch","genre","state","genres","console","log","container","spacing","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","bool","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetChannelsByGenreName.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelsByGenreName } from '../actions/genres.js';\nimport IndividualChannelCard from './IndividualChannelCard.js';\n\nconst GetChannelsByGenreName = (props) => {\n  const { genreName, short } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName]);\n\n  const genre = useSelector((state) => state.genres.genre);\n  console.log(genre);\n\n  return (\n    <Grid container spacing={3}>\n      {/* {channels && short &&\n        channels.slice(0, 6).map((channel) => (\n          <Grid item sm={6} md={4} lg={2} key={channel.id}>\n            <IndividualChannelCard channel={channel} />\n          </Grid>\n      ))}\n      {channels && !short &&\n        channels.map((channel) => (\n          <Grid item xs={2} key={channel.id}>\n            <IndividualChannelCard channel={channel} />\n          </Grid>\n      ))} */}\n    </Grid>\n  );\n};\n\nGetChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired,\n};\n\nexport default GetChannelsByGenreName;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,OAAOC,qBAAqB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAClC,MAAMI,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACT,sBAAsB,CAACO,SAAS,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMG,KAAK,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,KAAK,CAAC;EACxDG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAElB,oBACEP,OAAA,CAACN,IAAI;IAACkB,SAAS;IAACC,OAAO,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAarB,CAAC;AAEX,CAAC;AAACd,EAAA,CA3BIF,sBAAsB;EAAA,QAETN,WAAW,EAMdC,WAAW;AAAA;AAAAsB,EAAA,GARrBjB,sBAAsB;AA6B5BA,sBAAsB,CAACkB,SAAS,GAAG;EACjCf,SAAS,EAAEX,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACtChB,KAAK,EAAEZ,SAAS,CAAC6B,IAAI,CAACD;AACxB,CAAC;AAED,eAAepB,sBAAsB;AAAC,IAAAiB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}