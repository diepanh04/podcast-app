{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/GetEpisodesByChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetEpisodesByChannel = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n  const episodes = useSelector(state => {\n    var _state$channels$chann;\n    return (_state$channels$chann = state.channels[channelName]) === null || _state$channels$chann === void 0 ? void 0 : _state$channels$chann.episodes;\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    children: episodes && Array.isArray(episodes) ? episodes.map(ep => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IndividualEpisodeCard, {\n        episode: ep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {},\n      children: episodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(GetEpisodesByChannel, \"w0ISGhhLYk2eYXvlrTnM3rmce48=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetEpisodesByChannel;\nGetEpisodesByChannel.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default GetEpisodesByChannel;\nvar _c;\n$RefreshReg$(_c, \"GetEpisodesByChannel\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","Typography","useDispatch","useSelector","getEpisodesByChannel","IndividualEpisodeCard","jsxDEV","_jsxDEV","GetEpisodesByChannel","props","_s","channelName","dispatch","episodes","state","_state$channels$chann","channels","container","justifyContent","children","Array","isArray","map","ep","item","xs","episode","fileName","_jsxFileName","lineNumber","columnNumber","sx","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/GetEpisodesByChannel.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\n\nconst GetEpisodesByChannel = (props) => {\n  const { channelName } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n\n  const episodes = useSelector(state => state.channels[channelName]?.episodes);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      {episodes && Array.isArray(episodes) ? \n        episodes.map((ep) => (\n          <Grid item xs={12}>\n            <IndividualEpisodeCard episode={ep} />\n          </Grid>\n        )) :\n        <Typography\n          sx={{}}\n        >\n          {episodes}\n        </Typography>\n      }\n    </Grid>\n  )\n}\n\nGetEpisodesByChannel.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default GetEpisodesByChannel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,OAAOC,qBAAqB,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAY,CAAC,GAAGF,KAAK;EAC7B,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACR,oBAAoB,CAACO,WAAW,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAME,QAAQ,GAAGV,WAAW,CAACW,KAAK;IAAA,IAAAC,qBAAA;IAAA,QAAAA,qBAAA,GAAID,KAAK,CAACE,QAAQ,CAACL,WAAW,CAAC,cAAAI,qBAAA,uBAA3BA,qBAAA,CAA6BF,QAAQ;EAAA,EAAC;EAE5E,oBACEN,OAAA,CAACP,IAAI;IAACiB,SAAS;IAACC,cAAc,EAAC,QAAQ;IAAAC,QAAA,EACpCN,QAAQ,IAAIO,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,GAClCA,QAAQ,CAACS,GAAG,CAAEC,EAAE,iBACdhB,OAAA,CAACP,IAAI;MAACwB,IAAI;MAACC,EAAE,EAAE,EAAG;MAAAN,QAAA,eAChBZ,OAAA,CAACF,qBAAqB;QAACqB,OAAO,EAAEH;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACP,CAAC,gBACFvB,OAAA,CAACN,UAAU;MACT8B,EAAE,EAAE,CAAC,CAAE;MAAAZ,QAAA,EAENN;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEX,CAAC;AAAApB,EAAA,CA1BKF,oBAAoB;EAAA,QAEPN,WAAW,EAMXC,WAAW;AAAA;AAAA6B,EAAA,GARxBxB,oBAAoB;AA4B1BA,oBAAoB,CAACyB,SAAS,GAAG;EAC/BtB,WAAW,EAAEZ,SAAS,CAACmC,MAAM,CAACC;AAChC,CAAC;AAED,eAAe3B,oBAAoB;AAAC,IAAAwB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}