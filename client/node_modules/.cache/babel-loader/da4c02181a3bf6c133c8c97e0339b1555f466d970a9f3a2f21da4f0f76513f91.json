{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChannelsByGenre } from '../actions/genres.js';\nimport ShortPodcastList from './ShortPodcastList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetBestChannelsByGenre = props => {\n  _s();\n  const {\n    genreId\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(getChannelsByGenre(genreId));\n    };\n    fetchData();\n  }, [genreId]);\n  const genreData = useSelector(state => state.genres[genreId]);\n  const {\n    channels,\n    name\n  } = genreData || {};\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: '20px'\n        },\n        children: [\"Best In \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n          sx: {\n            fontSize: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), channels && /*#__PURE__*/_jsxDEV(ShortPodcastList, {\n      channels: channels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GetBestChannelsByGenre, \"SNp4si8uETY7kmbjA+4wxnFv7NY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetBestChannelsByGenre;\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired\n};\nexport default GetBestChannelsByGenre;\nvar _c;\n$RefreshReg$(_c, \"GetBestChannelsByGenre\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Typography","Grid","KeyboardDoubleArrowDownIcon","KeyboardDoubleArrowUpIcon","IconButton","Button","ArrowRightIcon","useDispatch","useSelector","Link","getChannelsByGenre","ShortPodcastList","jsxDEV","_jsxDEV","GetBestChannelsByGenre","props","_s","genreId","dispatch","fetchData","genreData","state","genres","channels","name","children","style","display","alignItems","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChannelsByGenre } from '../actions/genres.js'\nimport ShortPodcastList from './ShortPodcastList';\n\nconst GetBestChannelsByGenre = (props) => {\n  const { genreId } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(getChannelsByGenre(genreId));\n    };\n    fetchData();\n  }, [genreId]);\n\n  const genreData = useSelector((state) => state.genres[genreId]);\n  const { channels, name } = genreData || {};\n\n  return (\n    <Grid>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: '20px' }}>Best In {name}</Typography>\n        <IconButton>\n          <ArrowRightIcon sx={{ fontSize: '40px' }} />\n        </IconButton>\n      </div>\n      {channels && <ShortPodcastList channels={channels} />}\n    </Grid>\n  );\n};\n\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired,\n};\n\nexport default GetBestChannelsByGenre;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,2BAA2B,MAAM,6CAA6C;AACrF,OAAOC,yBAAyB,MAAM,2CAA2C;AACjF,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACzB,MAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BT,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,QAAQ,CAACR,kBAAkB,CAACO,OAAO,CAAC,CAAC;IACvC,CAAC;IACDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMG,SAAS,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACL,OAAO,CAAC,CAAC;EAC/D,MAAM;IAAEM,QAAQ;IAAEC;EAAK,CAAC,GAAGJ,SAAS,IAAI,CAAC,CAAC;EAE1C,oBACEP,OAAA,CAACZ,IAAI;IAAAwB,QAAA,gBACHZ,OAAA;MAAKa,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACpDZ,OAAA,CAACb,UAAU;QAAC6B,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAL,QAAA,GAAC,UAAQ,EAACD,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACjErB,OAAA,CAACT,UAAU;QAAAqB,QAAA,eACTZ,OAAA,CAACP,cAAc;UAACuB,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EACLX,QAAQ,iBAAIV,OAAA,CAACF,gBAAgB;MAACY,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEX,CAAC;AAAClB,EAAA,CAzBIF,sBAAsB;EAAA,QAETP,WAAW,EASVC,WAAW;AAAA;AAAA2B,EAAA,GAXzBrB,sBAAsB;AA2B5BA,sBAAsB,CAACsB,SAAS,GAAG;EACjCnB,OAAO,EAAElB,SAAS,CAACsC,MAAM,CAACC;AAC5B,CAAC;AAED,eAAexB,sBAAsB;AAAC,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}