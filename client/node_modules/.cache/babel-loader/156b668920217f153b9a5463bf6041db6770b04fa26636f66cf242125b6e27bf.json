{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_GREY } from '../shared/Constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodeList = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const hearted = channel.hearted;\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        padding: '3%',\n        backgroundColor: MAIN_LIGHT_GREY\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        sx: {\n          marginBottom: '3%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: channel.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 9,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '40px',\n              fontWeight: 'bold',\n              color: '#665A48'\n            },\n            children: channelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: hearted ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        justifyContent: \"center\",\n        children: episodes && Array.isArray(episodes) ? episodes.map(ep => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(IndividualEpisodeCard, {\n            episode: ep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {},\n          children: episodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodeList, \"GAwGVDTlsWmT9uoU2vDDOrdnxzQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = EpisodeList;\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","Box","Typography","Divider","ArrowBackIosIcon","Link","useNavigate","useDispatch","useSelector","getEpisodesByChannel","IndividualEpisodeCard","MAIN_LIGHT_GREY","jsxDEV","_jsxDEV","EpisodeList","props","_s","channelName","navigate","dispatch","channel","state","channels","episodes","hearted","children","container","sx","padding","backgroundColor","item","xs","marginBottom","src","thumbnail","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","FavoriteIcon","FavoriteBorderIcon","justifyContent","Array","isArray","map","ep","episode","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_GREY } from '../shared/Constant';\n\nconst EpisodeList = (props) => {\n  const { channelName } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const hearted = channel.hearted;\n\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          padding: '3%',\n          backgroundColor: MAIN_LIGHT_GREY,\n        }}\n      >\n        <Grid item xs={12} container sx={{ marginBottom: '3%' }}>\n          <Grid xs={3}><img src={channel.thumbnail} /></Grid>\n          <Grid xs={9}>\n            <Typography\n              sx={{\n                fontSize: '40px',\n                fontWeight: 'bold',\n                color: '#665A48',\n              }}\n            >\n              {channelName}\n            </Typography>\n            <span>\n            {(hearted) ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n            </span>\n          </Grid>\n        </Grid>\n        <Grid xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12} container justifyContent=\"center\">\n          {episodes && Array.isArray(episodes) ? \n            episodes.map((ep) => (\n              <Grid item xs={12}>\n                <IndividualEpisodeCard episode={ep} />\n              </Grid>\n            )) :\n            <Typography\n              sx={{}}\n            >\n              {episodes}\n            </Typography>\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default EpisodeList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}