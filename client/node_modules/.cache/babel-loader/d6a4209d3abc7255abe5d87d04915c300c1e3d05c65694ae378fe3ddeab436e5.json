{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/GetEpisodesByChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetEpisodesByChannel = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const dispatch = useDispatch();\n  const episodes = useSelector(state => state.channels[channelName]);\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n  return (\n    /*#__PURE__*/\n    // <Grid container spacing={3}>\n    //   {episodes && episodes.map((ep) => (\n    //     <Grid item sm={6} md={4} lg={2} key={ep.id}>\n    //       <IndividualEpisodeCard episode={ep} />\n    //     </Grid>\n    //   ))}\n    // </Grid>\n    _jsxDEV(Grid, {\n      children: Array.isArray(episodes) ? episodes.map(ep => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(IndividualEpisodeCard, {\n          episode: ep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {},\n        children: episodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(GetEpisodesByChannel, \"sx+CAoMXln3PFwwRZUcAXeOQZC4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetEpisodesByChannel;\nGetEpisodesByChannel.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default GetEpisodesByChannel;\nvar _c;\n$RefreshReg$(_c, \"GetEpisodesByChannel\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","IndividualEpisodeCard","useDispatch","useSelector","getEpisodesByChannel","Typography","jsxDEV","_jsxDEV","GetEpisodesByChannel","props","_s","channelName","dispatch","episodes","state","channels","children","Array","isArray","map","ep","item","xs","episode","fileName","_jsxFileName","lineNumber","columnNumber","sx","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/GetEpisodesByChannel.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport { Typography } from '@mui/material';\n\nconst GetEpisodesByChannel = (props) => {\n  const { channelName } = props;\n  const dispatch = useDispatch();\n\n  const episodes = useSelector(state => state.channels[channelName]);\n\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n\n  return (\n    // <Grid container spacing={3}>\n    //   {episodes && episodes.map((ep) => (\n    //     <Grid item sm={6} md={4} lg={2} key={ep.id}>\n    //       <IndividualEpisodeCard episode={ep} />\n    //     </Grid>\n    //   ))}\n    // </Grid>\n    <Grid>\n      {Array.isArray(episodes) ? \n        episodes.map((ep) => (\n          <Grid item xs={12}>\n            <IndividualEpisodeCard episode={ep} />\n          </Grid>\n        )) :\n        <Typography\n          sx={{}}\n        >\n          {episodes}\n        </Typography>\n      }\n    </Grid>\n  );\n}\n\nGetEpisodesByChannel.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default GetEpisodesByChannel"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,qBAAqB,MAAM,mCAAmC;AACrE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAY,CAAC,GAAGF,KAAK;EAC7B,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACJ,WAAW,CAAC,CAAC;EAElEb,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACR,oBAAoB,CAACO,WAAW,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACAJ,OAAA,CAACP,IAAI;MAAAgB,QAAA,EACFC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,GACtBA,QAAQ,CAACM,GAAG,CAAEC,EAAE,iBACdb,OAAA,CAACP,IAAI;QAACqB,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAN,QAAA,eAChBT,OAAA,CAACN,qBAAqB;UAACsB,OAAO,EAAEH;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CACP,CAAC,gBACFpB,OAAA,CAACF,UAAU;QACTuB,EAAE,EAAE,CAAC,CAAE;QAAAZ,QAAA,EAENH;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX;EAAC;AAEX,CAAC;AAAAjB,EAAA,CAjCKF,oBAAoB;EAAA,QAEPN,WAAW,EAEXC,WAAW;AAAA;AAAA0B,EAAA,GAJxBrB,oBAAoB;AAmC1BA,oBAAoB,CAACsB,SAAS,GAAG;EAC/BnB,WAAW,EAAEZ,SAAS,CAACgC,MAAM,CAACC;AAChC,CAAC;AAED,eAAexB,oBAAoB;AAAA,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}