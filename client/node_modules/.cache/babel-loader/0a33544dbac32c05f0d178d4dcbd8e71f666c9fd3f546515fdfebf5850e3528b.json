{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_GREY } from '../shared/Constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodeList = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const thumbnail = channel.thumbnail;\n  const publisher = channel.publisher;\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '30px',\n          padding: '1%',\n          backgroundColor: MAIN_LIGHT_GREY\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => navigate(-1),\n          sx: {\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '20px',\n              fontWeight: 'bold',\n              color: '#665A48'\n            },\n            children: channelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: episodes && Array.isArray(episodes) ? episodes.map(ep => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(IndividualEpisodeCard, {\n              episode: ep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {},\n            children: episodes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodeList, \"GAwGVDTlsWmT9uoU2vDDOrdnxzQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = EpisodeList;\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","Box","Typography","ArrowBackIosIcon","Link","useNavigate","useDispatch","useSelector","getEpisodesByChannel","IndividualEpisodeCard","MAIN_LIGHT_GREY","jsxDEV","_jsxDEV","EpisodeList","props","_s","channelName","navigate","dispatch","channel","state","channels","episodes","thumbnail","publisher","children","container","spacing","item","xs","sx","display","alignItems","marginBottom","padding","backgroundColor","onClick","cursor","fileName","_jsxFileName","lineNumber","columnNumber","src","fontSize","fontWeight","color","justifyContent","Array","isArray","map","ep","episode","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_GREY } from '../shared/Constant';\n\nconst EpisodeList = (props) => {\n  const { channelName } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const channel = useSelector(state => state.channels[channelName]) || {};\n  const episodes = channel.episodes || [];\n  const thumbnail = channel.thumbnail;\n  const publisher = channel.publisher;\n\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n\n  return (\n    <div>\n    <Grid container spacing={2}>\n      <Grid\n        item\n        xs={12}\n        container\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '30px',\n          padding: '1%',\n          backgroundColor: MAIN_LIGHT_GREY,\n        }}\n      >\n          <Link onClick={() => navigate(-1)} sx={{ cursor: 'pointer' }}>\n            <ArrowBackIosIcon />\n          </Link>\n          <Grid xs={6}><img src={thumbnail} /></Grid>\n          <Grid xs={6}>\n            <Typography\n              sx={{\n                fontSize: '20px',\n                fontWeight: 'bold',\n                color: '#665A48',\n              }}\n            >\n              {channelName}\n            </Typography>\n          </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\">\n          {episodes && Array.isArray(episodes) ? \n            episodes.map((ep) => (\n              <Grid item xs={12}>\n                <IndividualEpisodeCard episode={ep} />\n              </Grid>\n            )) :\n            <Typography\n              sx={{}}\n            >\n              {episodes}\n            </Typography>\n          }\n        </Grid>\n      </Grid>\n    </Grid>\n    </div>\n  )\n}\n\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default EpisodeList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}