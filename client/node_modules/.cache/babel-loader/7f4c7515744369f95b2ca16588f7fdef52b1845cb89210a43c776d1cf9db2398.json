{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport IndividualChannelCard from './IndividualChannelCard';\nimport { useDispatch } from 'react-redux';\nimport { createChannel } from '../actions/channels';\nimport ShortPodcastList from './ShortPodcastList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Client\n} = require('podcast-api');\nconst client = Client({\n  apiKey: '6f228db1aec840ec96932ebdc92138e8'\n});\nconst channels = [{\n  title: 'Channel 1',\n  description: 'This is channel 1 description'\n}, {\n  title: 'Channel 2',\n  description: 'This is channel 2 description'\n}, {\n  title: 'Channel 3',\n  description: 'This is channel 3 description'\n}];\nconst GetBestChannelsByGenre = props => {\n  _s();\n  const {\n    genreId\n  } = props;\n  const [channels, setChannels] = useState([]);\n  const [genre, setGenre] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   const fetchPodcastsByGenre = async () => {\n  //     client.fetchBestPodcasts({\n  //       genre_id: genreId,\n  //       region: 'us',\n  //       sort: 'listen_score',\n  //       safe_mode: 0,\n  //     }).then((response) => {\n  //       const data = response.data;\n  //       setChannels(data.podcasts);\n  //       setGenre(data.name);\n  //     }).catch((error) => {\n  //       console.log(error);\n  //     });\n  //   }\n  //   fetchPodcastsByGenre();\n  // }, [genreId]);\n\n  useEffect(() => {\n    const fetchPodcastsByGenre = async () => {\n      client.fetchBestPodcasts({\n        genre_id: genreId,\n        region: 'us',\n        sort: 'listen_score',\n        safe_mode: 0\n      }).then(response => {\n        const data = response.data;\n        setChannels(data.podcasts);\n        setGenre(data.name);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    fetchPodcastsByGenre();\n  }, [genreId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: '20px'\n        },\n        children: [\"Best In \", genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n          sx: {\n            fontSize: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShortPodcastList, {\n      channels: channels.slice(0, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(GetBestChannelsByGenre, \"EjCG0YbSCcrKeFfQ21XdCPW4ff8=\", false, function () {\n  return [useDispatch];\n});\n_c = GetBestChannelsByGenre;\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired\n};\nexport default GetBestChannelsByGenre;\nvar _c;\n$RefreshReg$(_c, \"GetBestChannelsByGenre\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Typography","Grid","KeyboardDoubleArrowDownIcon","KeyboardDoubleArrowUpIcon","IconButton","Button","ArrowRightIcon","IndividualChannelCard","useDispatch","createChannel","ShortPodcastList","jsxDEV","_jsxDEV","Client","require","client","apiKey","channels","title","description","GetBestChannelsByGenre","props","_s","genreId","setChannels","genre","setGenre","dispatch","fetchPodcastsByGenre","fetchBestPodcasts","genre_id","region","sort","safe_mode","then","response","data","podcasts","name","catch","error","console","log","children","style","display","alignItems","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","slice","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport IndividualChannelCard from './IndividualChannelCard';\n\nimport { useDispatch } from 'react-redux';\nimport { createChannel } from '../actions/channels';\n\nimport ShortPodcastList from './ShortPodcastList';\nconst { Client } = require('podcast-api');\n\nconst client = Client({ apiKey: '6f228db1aec840ec96932ebdc92138e8' });\n\nconst channels = [\n  {title: 'Channel 1', description: 'This is channel 1 description'},\n  {title: 'Channel 2', description: 'This is channel 2 description'},\n  {title: 'Channel 3', description: 'This is channel 3 description'},\n];\n\nconst GetBestChannelsByGenre = (props) => {\n  const { genreId } = props;\n  const [channels, setChannels] = useState([]);\n  const [genre, setGenre] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   const fetchPodcastsByGenre = async () => {\n  //     client.fetchBestPodcasts({\n  //       genre_id: genreId,\n  //       region: 'us',\n  //       sort: 'listen_score',\n  //       safe_mode: 0,\n  //     }).then((response) => {\n  //       const data = response.data;\n  //       setChannels(data.podcasts);\n  //       setGenre(data.name);\n  //     }).catch((error) => {\n  //       console.log(error);\n  //     });\n  //   }\n  //   fetchPodcastsByGenre();\n  // }, [genreId]);\n\n  useEffect(() => {\n    const fetchPodcastsByGenre = async () => {\n      client.fetchBestPodcasts({\n        genre_id: genreId,\n        region: 'us',\n        sort: 'listen_score',\n        safe_mode: 0,\n      }).then((response) => {\n        const data = response.data;\n        setChannels(data.podcasts);\n        setGenre(data.name);\n      }).catch((error) => {\n        console.log(error);\n      });\n    }\n    fetchPodcastsByGenre();\n  }, [genreId]);\n\n  return (\n    <Grid>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: '20px' }}>Best In {genre}</Typography>\n        <IconButton>\n          <ArrowRightIcon sx={{ fontSize: '40px' }} />\n        </IconButton>\n      </div>\n      <ShortPodcastList channels={channels.slice(0,4)} />\n    </Grid>\n  );\n};\n\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired,\n};\n\nexport default GetBestChannelsByGenre;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}