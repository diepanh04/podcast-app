{"ast":null,"code":"var _this = this;\nconst {\n  API_BASE_PROD,\n  API_BASE_TEST,\n  defaultUserAgent\n} = require('./Constants');\nconst {\n  addApiMethodsToClient\n} = require('./PodcastApiMethods');\nconst ClientForNode = function () {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const axios = require('axios');\n  axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n  _this.httpClient = axios.create({\n    baseURL: config.apiKey ? API_BASE_PROD : API_BASE_TEST,\n    timeout: 30000,\n    headers: {\n      'X-ListenAPI-Key': config.apiKey || '',\n      'User-Agent': config.userAgent || defaultUserAgent\n    }\n  });\n  _this.httpClient._get = (path, params) => _this.httpClient.get(path, {\n    params\n  });\n  _this.httpClient._post = (path, params) => _this.httpClient.post(path, new URLSearchParams(params).toString());\n  _this.httpClient._delete = path => _this.httpClient.delete(path);\n  return addApiMethodsToClient(_this);\n};\nmodule.exports = {\n  ClientForNode\n};","map":{"version":3,"names":["API_BASE_PROD","API_BASE_TEST","defaultUserAgent","require","addApiMethodsToClient","ClientForNode","config","arguments","length","undefined","axios","defaults","headers","post","_this","httpClient","create","baseURL","apiKey","timeout","userAgent","_get","path","params","get","_post","URLSearchParams","toString","_delete","delete","module","exports"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/node_modules/podcast-api/src/PodcastApiClientForNode.js"],"sourcesContent":["const { API_BASE_PROD, API_BASE_TEST, defaultUserAgent } = require('./Constants');\nconst { addApiMethodsToClient } = require('./PodcastApiMethods');\n\nconst ClientForNode = (config = {}) => {\n  const axios = require('axios');\n\n  axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n  this.httpClient = axios.create({\n    baseURL: config.apiKey ? API_BASE_PROD : API_BASE_TEST,\n    timeout: 30000,\n    headers: {\n      'X-ListenAPI-Key': config.apiKey || '',\n      'User-Agent': config.userAgent || defaultUserAgent,\n    },\n  });\n\n  this.httpClient._get = (path, params) => this.httpClient.get(path, { params });\n  this.httpClient._post = (path, params) => this.httpClient.post(path, new URLSearchParams(params).toString());\n  this.httpClient._delete = (path) => this.httpClient.delete(path);\n\n  return addApiMethodsToClient(this);\n};\n\nmodule.exports = {\n  ClientForNode,\n};\n"],"mappings":";AAAA,MAAM;EAAEA,aAAa;EAAEC,aAAa;EAAEC;AAAiB,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjF,MAAM;EAAEC;AAAsB,CAAC,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAEhE,MAAME,aAAa,GAAG,SAAAA,CAAA,EAAiB;EAAA,IAAhBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,MAAMG,KAAK,GAAGP,OAAO,CAAC,OAAO,CAAC;EAE9BO,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,mCAAmC;EACjFC,KAAI,CAACC,UAAU,GAAGL,KAAK,CAACM,MAAM,CAAC;IAC7BC,OAAO,EAAEX,MAAM,CAACY,MAAM,GAAGlB,aAAa,GAAGC,aAAa;IACtDkB,OAAO,EAAE,KAAK;IACdP,OAAO,EAAE;MACP,iBAAiB,EAAEN,MAAM,CAACY,MAAM,IAAI,EAAE;MACtC,YAAY,EAAEZ,MAAM,CAACc,SAAS,IAAIlB;IACpC;EACF,CAAC,CAAC;EAEFY,KAAI,CAACC,UAAU,CAACM,IAAI,GAAG,CAACC,IAAI,EAAEC,MAAM,KAAKT,KAAI,CAACC,UAAU,CAACS,GAAG,CAACF,IAAI,EAAE;IAAEC;EAAO,CAAC,CAAC;EAC9ET,KAAI,CAACC,UAAU,CAACU,KAAK,GAAG,CAACH,IAAI,EAAEC,MAAM,KAAKT,KAAI,CAACC,UAAU,CAACF,IAAI,CAACS,IAAI,EAAE,IAAII,eAAe,CAACH,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC;EAC5Gb,KAAI,CAACC,UAAU,CAACa,OAAO,GAAIN,IAAI,IAAKR,KAAI,CAACC,UAAU,CAACc,MAAM,CAACP,IAAI,CAAC;EAEhE,OAAOlB,qBAAqB,CAACU,KAAI,CAAC;AACpC,CAAC;AAEDgB,MAAM,CAACC,OAAO,GAAG;EACf1B;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}