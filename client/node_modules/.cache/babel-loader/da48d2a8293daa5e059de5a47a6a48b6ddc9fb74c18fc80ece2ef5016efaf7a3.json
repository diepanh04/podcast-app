{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/shared/IndividualChannelCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addHearToChannel } from '../../actions/channels.js';\nimport useAuthentication from '../CurrentUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  root: {\n    padding: '10%',\n    height: '30vh',\n    marginBottom: '15%',\n    backgroundColor: 'rgb(159, 135, 114, 0.3)',\n    width: '100%'\n  },\n  img: {\n    width: '20vh',\n    objectFit: 'cover'\n  },\n  card: {\n    textAlign: 'center'\n  },\n  titleContainer: {\n    marginTop: '5px'\n  },\n  title: {\n    fontSize: '18px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n};\nconst IndividualChannelCard = props => {\n  _s();\n  const {\n    channel\n  } = props;\n  const {\n    id,\n    title,\n    thumbnail\n  } = channel;\n  const dispatch = useDispatch();\n  const currentUser = useAuthentication();\n  const heartAdded = useSelector(state => console.log(state.channels));\n  console.log(heartAdded);\n  const clickHeart = () => {\n    dispatch(addHearToChannel(id, currentUser.id));\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    sx: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sx: styles.card,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        style: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sx: styles.titleContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n        onClick: clickHeart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualChannelCard, \"ZnydDuEg1idyERRvH5SEVEWJKhg=\", false, function () {\n  return [useDispatch, useAuthentication, useSelector];\n});\n_c = IndividualChannelCard;\nIndividualChannelCard.propTypes = {\n  channel: PropTypes.object.isRequired\n};\nexport default IndividualChannelCard;\nvar _c;\n$RefreshReg$(_c, \"IndividualChannelCard\");","map":{"version":3,"names":["React","PropTypes","FavoriteBorderIcon","Grid","useDispatch","useSelector","addHearToChannel","useAuthentication","jsxDEV","_jsxDEV","styles","root","padding","height","marginBottom","backgroundColor","width","img","objectFit","card","textAlign","titleContainer","marginTop","title","fontSize","whiteSpace","overflow","textOverflow","IndividualChannelCard","props","_s","channel","id","thumbnail","dispatch","currentUser","heartAdded","state","console","log","channels","clickHeart","sx","children","item","src","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/shared/IndividualChannelCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addHearToChannel } from '../../actions/channels.js';\nimport useAuthentication from '../CurrentUser';\n\nconst styles = {\n  root: {\n    padding: '10%',\n    height: '30vh',\n    marginBottom: '15%',\n    backgroundColor: 'rgb(159, 135, 114, 0.3)',\n    width: '100%',\n  },\n  img: {\n    width: '20vh',\n    objectFit: 'cover',\n  },\n  card: {\n    textAlign: 'center',\n  },\n  titleContainer: {\n    marginTop: '5px',\n  },\n  title: {\n    fontSize: '18px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\nconst IndividualChannelCard = (props) => {\n  const { channel } = props;\n  const { id, title, thumbnail } = channel;\n  const dispatch = useDispatch();\n  const currentUser = useAuthentication();\n\n  const heartAdded = useSelector(state => console.log(state.channels));\n  console.log(heartAdded);\n\n  const clickHeart = () => {\n    dispatch(addHearToChannel(id, currentUser.id));\n  }\n\n  return (\n    <Grid sx={styles.root}>\n      <Grid item sx={styles.card}>\n        <img src={thumbnail} style={styles.img} />\n      </Grid>\n      <Grid item sx={styles.titleContainer}>\n        <div style={styles.title}>{title}</div>\n      </Grid>\n      <Grid item>\n        <FavoriteBorderIcon onClick={clickHeart}/>\n      </Grid>\n    </Grid>\n  );\n};\n\nIndividualChannelCard.propTypes = {\n  channel: PropTypes.object.isRequired,\n};\n\nexport default IndividualChannelCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}