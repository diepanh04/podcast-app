{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/ShortPodcastList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport IndividualChannelCard from './IndividualChannelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShortPodcastList = props => {\n  const {\n    channels\n  } = props;\n  console.log(channels);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: channels.podcasts.map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(IndividualChannelCard, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ShortPodcastList;\nShortPodcastList.propTypes = {\n  channels: PropTypes.object.isRequired\n};\nexport default ShortPodcastList;\nvar _c;\n$RefreshReg$(_c, \"ShortPodcastList\");","map":{"version":3,"names":["React","PropTypes","Grid","IndividualChannelCard","jsxDEV","_jsxDEV","ShortPodcastList","props","channels","console","log","container","spacing","children","podcasts","map","channel","item","xs","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/ShortPodcastList.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport IndividualChannelCard from './IndividualChannelCard';\n\nconst ShortPodcastList = (props) => {\n  const { channels } = props;\n  console.log(channels);\n\n  return (\n    <Grid container spacing={3}>\n      {channels.podcasts.map((channel) => (\n        <Grid item xs={3}>\n          <IndividualChannelCard channel={channel} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nShortPodcastList.propTypes = {\n  channels: PropTypes.object.isRequired,\n};\n\n\nexport default ShortPodcastList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;EAC1BE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAErB,oBACEH,OAAA,CAACH,IAAI;IAACS,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBL,QAAQ,CAACM,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC7BX,OAAA,CAACH,IAAI;MAACe,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eACfR,OAAA,CAACF,qBAAqB;QAACa,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAAC,EAAA,GAbKjB,gBAAgB;AAetBA,gBAAgB,CAACkB,SAAS,GAAG;EAC3BhB,QAAQ,EAAEP,SAAS,CAACwB,MAAM,CAACC;AAC7B,CAAC;AAGD,eAAepB,gBAAgB;AAAA,IAAAiB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}