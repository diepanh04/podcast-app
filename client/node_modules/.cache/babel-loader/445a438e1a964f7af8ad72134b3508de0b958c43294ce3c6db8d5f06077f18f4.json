{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport IndividualChannelCard from './IndividualChannelCard';\nimport { useDispatch } from 'react-redux';\nimport { createChannel } from '../actions/channels.js';\nimport ShortPodcastList from './ShortPodcastList';\nimport { PrismaClient } from \"@prisma/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prisma = new PrismaClient();\nconst GetBestChannelsByGenre = props => {\n  _s();\n  const {\n    genreId\n  } = props;\n  const [channels, setChannels] = useState([]);\n  const [genre, setGenre] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    const channels = await prisma.channel.findMany({\n      include: {}\n    });\n  }, [genreId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: '20px'\n        },\n        children: [\"Best In \", genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n          sx: {\n            fontSize: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShortPodcastList, {\n      channels: channels.slice(0, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GetBestChannelsByGenre, \"EjCG0YbSCcrKeFfQ21XdCPW4ff8=\", false, function () {\n  return [useDispatch];\n});\n_c = GetBestChannelsByGenre;\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired\n};\nexport default GetBestChannelsByGenre;\nvar _c;\n$RefreshReg$(_c, \"GetBestChannelsByGenre\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Typography","Grid","KeyboardDoubleArrowDownIcon","KeyboardDoubleArrowUpIcon","IconButton","Button","ArrowRightIcon","IndividualChannelCard","useDispatch","createChannel","ShortPodcastList","PrismaClient","jsxDEV","_jsxDEV","prisma","GetBestChannelsByGenre","props","_s","genreId","channels","setChannels","genre","setGenre","dispatch","channel","findMany","include","children","style","display","alignItems","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","slice","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport IndividualChannelCard from './IndividualChannelCard';\n\nimport { useDispatch } from 'react-redux';\nimport { createChannel } from '../actions/channels.js'\n\nimport ShortPodcastList from './ShortPodcastList';\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nconst GetBestChannelsByGenre = (props) => {\n  const { genreId } = props;\n  const [channels, setChannels] = useState([]);\n  const [genre, setGenre] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect( async() => {\n    const channels = await prisma.channel.findMany({\n      include: {\n        \n      }\n    })\n\n  }, [genreId]);\n\n  return (\n    <Grid>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: '20px' }}>Best In {genre}</Typography>\n        <IconButton>\n          <ArrowRightIcon sx={{ fontSize: '40px' }} />\n        </IconButton>\n      </div>\n      <ShortPodcastList channels={channels.slice(0,4)} />\n    </Grid>\n  );\n};\n\nGetBestChannelsByGenre.propTypes = {\n  genreId: PropTypes.string.isRequired,\n};\n\nexport default GetBestChannelsByGenre;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,2BAA2B,MAAM,6CAA6C;AACrF,OAAOC,yBAAyB,MAAM,2CAA2C;AACjF,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,qBAAqB,MAAM,yBAAyB;AAE3D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAG,IAAIH,YAAY,CAAC,CAAC;AAEjC,MAAMI,sBAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACzB,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM0B,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BV,SAAS,CAAE,YAAW;IACpB,MAAMqB,QAAQ,GAAG,MAAML,MAAM,CAACU,OAAO,CAACC,QAAQ,CAAC;MAC7CC,OAAO,EAAE,CAET;IACF,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,oBACEL,OAAA,CAACZ,IAAI;IAAA0B,QAAA,gBACHd,OAAA;MAAKe,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACpDd,OAAA,CAACb,UAAU;QAAC+B,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAL,QAAA,GAAC,UAAQ,EAACN,KAAK;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClEvB,OAAA,CAACT,UAAU;QAAAuB,QAAA,eACTd,OAAA,CAACP,cAAc;UAACyB,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNvB,OAAA,CAACH,gBAAgB;MAACS,QAAQ,EAAEA,QAAQ,CAACkB,KAAK,CAAC,CAAC,EAAC,CAAC;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEX,CAAC;AAACnB,EAAA,CA1BIF,sBAAsB;EAAA,QAITP,WAAW;AAAA;AAAA8B,EAAA,GAJxBvB,sBAAsB;AA4B5BA,sBAAsB,CAACwB,SAAS,GAAG;EACjCrB,OAAO,EAAEnB,SAAS,CAACyC,MAAM,CAACC;AAC5B,CAAC;AAED,eAAe1B,sBAAsB;AAAC,IAAAuB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}