{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import Typography from '@mui/material/Typography';\n// import Grid from '@mui/material/Grid';\n// import KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\n// import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n// import IconButton from '@mui/material/IconButton';\n// import Button from '@mui/material/Button';\n// import ArrowRightIcon from '@mui/icons-material/ArrowRight';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import { getChannelsByGenre, setChannels } from '../actions/genres.js'\n// import ShortPodcastList from './ShortPodcastList';\n\n// const GetBestChannelsByGenre = (props) => {\n//   const { genreId } = props;\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       dispatch(getChannelsByGenre(genreId));\n//     };\n//     fetchData();\n//   }, [genreId]);\n\n//   const genreData = useSelector((state) => state.genres[genreId]);\n//   const { channels, name } = genreData || {};\n\n//   useEffect(() => {\n//     dispatch(setChannels(channels));\n//   }, [name]);\n\n//   return (\n//     <Grid>\n//       <div style={{ display: 'flex', alignItems: 'center' }}>\n//         <Typography sx={{ fontSize: '20px' }}>Best In {name}</Typography>\n//         <Link to={`/${name}`}>\n//           <IconButton>\n//             <ArrowRightIcon sx={{ fontSize: '40px' }} />\n//           </IconButton>\n//         </Link>\n//       </div>\n//       {channels && <ShortPodcastList channels={channels} />}\n//     </Grid>\n//   );\n// };\n\n// GetBestChannelsByGenre.propTypes = {\n//   genreId: PropTypes.string.isRequired,\n// };\n\n// export default GetBestChannelsByGenre;","map":{"version":3,"names":[],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenre.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import Typography from '@mui/material/Typography';\n// import Grid from '@mui/material/Grid';\n// import KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\n// import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n// import IconButton from '@mui/material/IconButton';\n// import Button from '@mui/material/Button';\n// import ArrowRightIcon from '@mui/icons-material/ArrowRight';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import { getChannelsByGenre, setChannels } from '../actions/genres.js'\n// import ShortPodcastList from './ShortPodcastList';\n\n// const GetBestChannelsByGenre = (props) => {\n//   const { genreId } = props;\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       dispatch(getChannelsByGenre(genreId));\n//     };\n//     fetchData();\n//   }, [genreId]);\n\n//   const genreData = useSelector((state) => state.genres[genreId]);\n//   const { channels, name } = genreData || {};\n\n//   useEffect(() => {\n//     dispatch(setChannels(channels));\n//   }, [name]);\n\n//   return (\n//     <Grid>\n//       <div style={{ display: 'flex', alignItems: 'center' }}>\n//         <Typography sx={{ fontSize: '20px' }}>Best In {name}</Typography>\n//         <Link to={`/${name}`}>\n//           <IconButton>\n//             <ArrowRightIcon sx={{ fontSize: '40px' }} />\n//           </IconButton>\n//         </Link>\n//       </div>\n//       {channels && <ShortPodcastList channels={channels} />}\n//     </Grid>\n//   );\n// };\n\n// GetBestChannelsByGenre.propTypes = {\n//   genreId: PropTypes.string.isRequired,\n// };\n\n// export default GetBestChannelsByGenre;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}