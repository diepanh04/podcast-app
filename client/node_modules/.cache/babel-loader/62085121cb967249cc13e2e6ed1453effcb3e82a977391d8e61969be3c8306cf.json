{"ast":null,"code":"var _this = this;\nconst {\n  API_BASE_PROD,\n  API_BASE_TEST,\n  defaultUserAgent\n} = require('./Constants');\nconst {\n  addApiMethodsToClient\n} = require('./PodcastApiMethods');\nconst _fetch = function (path, config) {\n  let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  let queryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let formParams = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let url = `${config.apiKey ? API_BASE_PROD : API_BASE_TEST}${path}`;\n  const headers = {\n    'X-ListenAPI-Key': config.apiKey || '',\n    'User-Agent': config.userAgent || defaultUserAgent\n  };\n  const fetchConfig = {\n    method,\n    headers\n  };\n  let formParamsString = null;\n  if (formParams) {\n    fetchConfig.body = formParams;\n    formParamsString = [...formParams.entries()].map(x => `${encodeURIComponent(x[0])}=${encodeURIComponent(x[1])}`).join('&');\n  }\n  if (queryParams) {\n    url = `${url}?${new URLSearchParams(queryParams).toString()}`;\n  }\n  const responseConfig = {\n    params: queryParams,\n    data: formParamsString,\n    url: path,\n    method: method.toLowerCase()\n  };\n  const responseHeaders = {};\n  return fetch(url, fetchConfig).then(response => {\n    if (response.headers) {\n      for (const pair of response.headers.entries()) {\n        responseHeaders[pair[0]] = pair[1];\n      }\n    }\n    if (response.ok) {\n      return response;\n    } else {\n      const err = new Error(`HTTP ${response.status}`);\n      err.response = {\n        status: response.status,\n        config: responseConfig,\n        headers: responseHeaders\n      };\n      throw err;\n    }\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    return {\n      config: responseConfig,\n      headers: responseHeaders,\n      data\n    };\n  });\n};\nconst ClientForWorkers = function () {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  _this.httpClient = {\n    _get: (path, params) => {\n      return _fetch(path, config, 'GET', params);\n    },\n    _post: (path, params) => {\n      let formData = null;\n      if (params && Object.keys(params).length > 0) {\n        formData = new FormData();\n        Object.keys(params).forEach(function (key) {\n          formData.append(key, params[key]);\n        });\n      }\n      return _fetch(path, config, 'POST', {}, formData);\n    },\n    _delete: path => {\n      return _fetch(path, config, 'DELETE');\n    }\n  };\n  return addApiMethodsToClient(_this);\n};\nmodule.exports = {\n  ClientForWorkers\n};","map":{"version":3,"names":["API_BASE_PROD","API_BASE_TEST","defaultUserAgent","require","addApiMethodsToClient","_fetch","path","config","method","arguments","length","undefined","queryParams","formParams","url","apiKey","headers","userAgent","fetchConfig","formParamsString","body","entries","map","x","encodeURIComponent","join","URLSearchParams","toString","responseConfig","params","data","toLowerCase","responseHeaders","fetch","then","response","pair","ok","err","Error","status","json","ClientForWorkers","_this","httpClient","_get","_post","formData","Object","keys","FormData","forEach","key","append","_delete","module","exports"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/node_modules/podcast-api/src/PodcastApiClientForWorkers.js"],"sourcesContent":["const {API_BASE_PROD, API_BASE_TEST, defaultUserAgent} = require('./Constants');\nconst {addApiMethodsToClient} = require('./PodcastApiMethods');\n\nconst _fetch = (path, config, method = 'GET', queryParams = {}, formParams = null) => {\n  let url = `${config.apiKey ? API_BASE_PROD : API_BASE_TEST}${path}`;\n  const headers = {\n    'X-ListenAPI-Key': config.apiKey || '',\n    'User-Agent': config.userAgent || defaultUserAgent,\n  };\n  const fetchConfig = {\n    method,\n    headers,\n  };\n  let formParamsString = null;\n  if (formParams) {\n    fetchConfig.body = formParams;\n    formParamsString = [...formParams.entries()].map(\n      x => `${encodeURIComponent(x[0])}=${encodeURIComponent(x[1])}`).join('&');\n  }\n  if (queryParams) {\n    url = `${url}?${new URLSearchParams(queryParams).toString()}`\n  }\n  const responseConfig = {\n    params: queryParams,\n    data: formParamsString,\n    url: path,\n    method: method.toLowerCase(),\n  };\n  const responseHeaders = {};\n  return fetch(url, fetchConfig).then((response) => {\n    if (response.headers) {\n      for (const pair of response.headers.entries()) {\n        responseHeaders[pair[0]] = pair[1];\n      }\n    }\n\n    if (response.ok) {\n      return response;\n    } else {\n      const err = new Error(`HTTP ${response.status}`);\n      err.response = {\n        status: response.status,\n        config: responseConfig,\n        headers: responseHeaders,\n      };\n      throw err;\n    }\n  }).then((response) => {\n    return response.json();\n  }).then((data) => {\n    return {\n      config: responseConfig,\n      headers: responseHeaders,\n      data,\n    }\n  });\n};\n\nconst ClientForWorkers = (config = {}) => {\n  this.httpClient = {\n    _get: (path, params) => {\n      return _fetch(path, config, 'GET', params);\n    },\n\n    _post: (path, params) => {\n      let formData = null;\n      if (params && Object.keys(params).length > 0) {\n        formData = new FormData();\n        Object.keys(params).forEach(function (key) {\n          formData.append(key, params[key]);\n        });\n      }\n      return _fetch(path, config, 'POST', {}, formData)\n    },\n\n    _delete: (path) => {\n      return _fetch(path, config, 'DELETE')\n    },\n  };\n  return addApiMethodsToClient(this);\n};\n\nmodule.exports = {\n  ClientForWorkers,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}