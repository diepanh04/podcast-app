{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_YELLOW } from '../shared/Constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodeList = props => {\n  _s();\n  const {\n    channelName\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n  console.log(channelName);\n  const channel = useSelector(state => console.log(state.channels[channelName]));\n  // const episodes = channel.episodes;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      c: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '30px',\n            position: 'fixed',\n            padding: '1%',\n            backgroundColor: MAIN_LIGHT_YELLOW\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => navigate(-1),\n            sx: {\n              cursor: 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '20px',\n              fontWeight: 'bold',\n              color: '#665A48'\n            },\n            children: channelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodeList, \"xKLO24sl4ve1z7DBKKMg9BOfTa8=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = EpisodeList;\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired\n};\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","PropTypes","Grid","Box","Typography","ArrowBackIosIcon","Link","useNavigate","useDispatch","useSelector","getEpisodesByChannel","IndividualEpisodeCard","MAIN_LIGHT_YELLOW","jsxDEV","_jsxDEV","EpisodeList","props","_s","channelName","navigate","dispatch","console","log","channel","state","channels","children","container","spacing","c","item","xs","sx","display","alignItems","marginBottom","position","padding","backgroundColor","onClick","cursor","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/components/channels/EpisodeList.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Link from '@mui/material/Link';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEpisodesByChannel } from '../../redux/channels/actions/channels';\nimport IndividualEpisodeCard from '../episodes/IndividualEpisodeCard';\nimport { MAIN_LIGHT_YELLOW } from '../shared/Constant';\n\nconst EpisodeList = (props) => {\n  const { channelName } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEpisodesByChannel(channelName));\n  }, [channelName]);\n\n  console.log(channelName);\n\n  const channel = useSelector(state => console.log(state.channels[channelName]));\n  // const episodes = channel.episodes;\n\n  return (\n    <div>\n    <Grid container spacing={2} c>\n      <Grid item xs={5} container>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '30px',\n            position: 'fixed',\n            padding: '1%',\n            backgroundColor: MAIN_LIGHT_YELLOW,\n          }}\n        >\n          <Link onClick={() => navigate(-1)} sx={{ cursor: 'pointer' }}>\n            <ArrowBackIosIcon />\n          </Link>\n          <Typography\n            sx={{\n              fontSize: '20px',\n              fontWeight: 'bold',\n              color: '#665A48',\n            }}\n          >\n            {channelName}\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={7}>\n        {/* <Grid container justifyContent=\"center\">\n          {Array.isArray(episodes) ? \n            episodes.map((ep) => (\n              <Grid item xs={12}>\n                <IndividualEpisodeCard episode={ep} />\n              </Grid>\n            )) :\n            <Typography\n              sx={{}}\n            >\n              {episodes}\n            </Typography>\n          }\n        </Grid> */}\n      </Grid>\n    </Grid>\n    </div>\n  )\n}\n\nEpisodeList.propTypes = {\n  channelName: PropTypes.string.isRequired,\n};\n\nexport default EpisodeList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}