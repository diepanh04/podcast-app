{"ast":null,"code":"import * as api from '../api/auth.js';\nimport firebase from '../services/firebase';\nexport const register = newUser => async dispatch => {\n  if (newUser.password != newUser.confirmPassword) {\n    const message = 'Passwords do not match';\n    return dispatch({\n      type: 'REGISTER_ERRORS',\n      payload: message\n    });\n  }\n  try {\n    const {\n      data\n    } = await api.register({\n      email: newUser.email,\n      password: newUser.password,\n      name: newUser.name\n    });\n    dispatch({\n      type: 'REGISTER',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const authenticateUser = () => async dispatch => {\n  console.log(firebase.auth.currentUser);\n  try {\n    const token = await firebase.auth.currentUser.getIdToken(true);\n    const res = await api.authenticateUser({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: 'AUTHENTICATE_USER',\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","firebase","register","newUser","dispatch","password","confirmPassword","message","type","payload","data","email","name","error","console","log","authenticateUser","auth","currentUser","token","getIdToken","res","headers","authorization"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/actions/auth.js"],"sourcesContent":["import * as api from '../api/auth.js';\nimport firebase from '../services/firebase';\n\nexport const register = (newUser) => async (dispatch) => {\n  if (newUser.password != newUser.confirmPassword) {\n    const message = 'Passwords do not match';\n    return dispatch({ type: 'REGISTER_ERRORS', payload: message });\n  }\n  try {\n    const { data } = await api.register({\n      email: newUser.email,\n      password: newUser.password,\n      name: newUser.name,\n    })\n    dispatch({ type: 'REGISTER', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const authenticateUser = () => async (dispatch) => {\n  console.log(firebase.auth.currentUser);\n  try {\n    const token = await firebase.auth.currentUser.getIdToken(true);\n    const res = await api.authenticateUser({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({ type: 'AUTHENTICATE_USER', payload: res.data })\n  } catch (error) {\n    console.log(error);\n  }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,gBAAgB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAO,MAAMC,QAAQ,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EACvD,IAAID,OAAO,CAACE,QAAQ,IAAIF,OAAO,CAACG,eAAe,EAAE;IAC/C,MAAMC,OAAO,GAAG,wBAAwB;IACxC,OAAOH,QAAQ,CAAC;MAAEI,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEF;IAAQ,CAAC,CAAC;EAChE;EACA,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACE,QAAQ,CAAC;MAClCS,KAAK,EAAER,OAAO,CAACQ,KAAK;MACpBN,QAAQ,EAAEF,OAAO,CAACE,QAAQ;MAC1BO,IAAI,EAAET,OAAO,CAACS;IAChB,CAAC,CAAC;IACFR,QAAQ,CAAC;MAAEI,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAEC;IAAK,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACN,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAGA,CAAA,KAAM,MAAOZ,QAAQ,IAAK;EACxDU,OAAO,CAACC,GAAG,CAACd,QAAQ,CAACgB,IAAI,CAACC,WAAW,CAAC;EACtC,IAAI;IACF,MAAMC,KAAK,GAAG,MAAMlB,QAAQ,CAACgB,IAAI,CAACC,WAAW,CAACE,UAAU,CAAC,IAAI,CAAC;IAC9D,MAAMC,GAAG,GAAG,MAAMrB,GAAG,CAACgB,gBAAgB,CAAC;MACrCM,OAAO,EAAE;QACPC,aAAa,EAAG,UAASJ,KAAM;MACjC;IACF,CAAC,CAAC;IACFf,QAAQ,CAAC;MAAEI,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAEY,GAAG,CAACX;IAAK,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}