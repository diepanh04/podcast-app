{"ast":null,"code":"var _jsxFileName = \"/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenreName.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChannelsByGenreName } from '../actions/genres.js';\nimport IndividualChannelCard from './IndividualChannelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetBestChannelsByGenreName = props => {\n  _s();\n  const {\n    genreName,\n    short\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName]);\n  const {\n    channels\n  } = useSelector(state => state.genres[genreName]) || [];\n  console.log(channels);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [channels && short && channels.slice(0, 4).map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(IndividualChannelCard, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)), channels && !short && channels.map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(IndividualChannelCard, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GetBestChannelsByGenreName, \"7K48bEdCs9ExWEWnKCoZI8Lr3a4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetBestChannelsByGenreName;\nGetBestChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired\n};\nexport default GetBestChannelsByGenreName;\nvar _c;\n$RefreshReg$(_c, \"GetBestChannelsByGenreName\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Typography","Grid","useDispatch","useSelector","Link","getChannelsByGenreName","IndividualChannelCard","jsxDEV","_jsxDEV","GetBestChannelsByGenreName","props","_s","genreName","short","dispatch","channels","state","genres","console","log","container","spacing","children","slice","map","channel","item","xs","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","propTypes","string","isRequired","bool","$RefreshReg$"],"sources":["/Users/anhnguyen/Desktop/podcast-app/podcast-app/client/src/Components/GetBestChannelsByGenreName.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChannelsByGenreName } from '../actions/genres.js';\nimport IndividualChannelCard from './IndividualChannelCard';\n\nconst GetBestChannelsByGenreName = (props) => {\n  const { genreName, short } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getChannelsByGenreName(genreName));\n  }, [genreName]);\n\n  const { channels } = useSelector((state) => state.genres[genreName]) || [];\n  console.log(channels);\n\n  return (\n    <Grid container spacing={3}>\n      {channels && short &&\n        channels.slice(0, 4).map((channel) => (\n          <Grid item xs={3} key={channel.id}>\n            <IndividualChannelCard channel={channel} />\n          </Grid>\n      ))}\n      {channels && !short &&\n        channels.map((channel) => (\n          <Grid item xs={3} key={channel.id}>\n            <IndividualChannelCard channel={channel} />\n          </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nGetBestChannelsByGenreName.propTypes = {\n  genreName: PropTypes.string.isRequired,\n  short: PropTypes.bool.isRequired,\n};\n\nexport default GetBestChannelsByGenreName;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,0BAA0B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAClC,MAAMI,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACT,sBAAsB,CAACO,SAAS,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAM;IAAEG;EAAS,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACL,SAAS,CAAC,CAAC,IAAI,EAAE;EAC1EM,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAErB,oBACEP,OAAA,CAACP,IAAI;IAACmB,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,GACxBP,QAAQ,IAAIF,KAAK,IAChBE,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,OAAO,iBAC/BjB,OAAA,CAACP,IAAI;MAACyB,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eACfd,OAAA,CAACF,qBAAqB;QAACmB,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADtBN,OAAO,CAACO,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CACT,CAAC,EACDhB,QAAQ,IAAI,CAACF,KAAK,IACjBE,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACnBjB,OAAA,CAACP,IAAI;MAACyB,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eACfd,OAAA,CAACF,qBAAqB;QAACmB,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADtBN,OAAO,CAACO,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACpB,EAAA,CA3BIF,0BAA0B;EAAA,QAEbP,WAAW,EAMPC,WAAW;AAAA;AAAA8B,EAAA,GAR5BxB,0BAA0B;AA6BhCA,0BAA0B,CAACyB,SAAS,GAAG;EACrCtB,SAAS,EAAEb,SAAS,CAACoC,MAAM,CAACC,UAAU;EACtCvB,KAAK,EAAEd,SAAS,CAACsC,IAAI,CAACD;AACxB,CAAC;AAED,eAAe3B,0BAA0B;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}